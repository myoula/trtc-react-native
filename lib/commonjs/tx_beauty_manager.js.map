{"version":3,"sources":["tx_beauty_manager.tsx"],"names":["TrtcReactNativeSdk","NativeModules","TXBeautyManager","constructor","setBeautyStyle","beautyStyle","setFilter","image","imageUrl","setFilterStrength","strength","toString","setBeautyLevel","beautyLevel","setWhitenessLevel","whitenessLevel","setRuddyLevel","ruddyLevel","enableSharpnessEnhancement","enable"],"mappings":";;;;;;;AAAA;;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAyBC,0BAA/B,C,CAEA;;AACe,MAAMC,eAAN,CAAsB;AACnCC,EAAAA,WAAW,GAAG,CAAE;AAEhB;AACF;AACA;AACA;;;AACEC,EAAAA,cAAc,CAACC,WAAD,EAAqC;AACjD,WAAOL,kBAAkB,CAACI,cAAnB,CAAkC;AAAEC,MAAAA;AAAF,KAAlC,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,SAAS,CAACC,KAAD,EAA+B;AACtC,WAAOP,kBAAkB,CAACM,SAAnB,CAA6B;AAAEE,MAAAA,QAAQ,EAAED;AAAZ,KAA7B,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEE,EAAAA,iBAAiB,CAACC,QAAD,EAAkC;AACjD,WAAOV,kBAAkB,CAACS,iBAAnB,CAAqC;AAC1CC,MAAAA,QAAQ,EAAEA,QAAQ,CAACC,QAAT;AADgC,KAArC,CAAP;AAGD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,cAAc,CAACC,WAAD,EAAqC;AACjD,WAAOb,kBAAkB,CAACY,cAAnB,CAAkC;AACvCC,MAAAA;AADuC,KAAlC,CAAP;AAGD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,iBAAiB,CAACC,cAAD,EAAwC;AACvD,WAAOf,kBAAkB,CAACc,iBAAnB,CAAqC;AAC1CC,MAAAA;AAD0C,KAArC,CAAP;AAGD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,aAAa,CAACC,UAAD,EAAoC;AAC/C,WAAOjB,kBAAkB,CAACgB,aAAnB,CAAiC;AACtCC,MAAAA;AADsC,KAAjC,CAAP;AAGD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,0BAA0B,CAACC,MAAD,EAAiC;AACzD,WAAOnB,kBAAkB,CAACkB,0BAAnB,CAA8C;AACnDC,MAAAA;AADmD,KAA9C,CAAP;AAGD;;AAtEkC","sourcesContent":["import { NativeModules } from 'react-native';\nconst { TrtcReactNativeSdk } = NativeModules;\n\n/// 美颜及动效参数管理\nexport default class TXBeautyManager {\n  constructor() {}\n\n  /**\n  - 设置美颜类型\n  @param beautyStyle\t美颜风格.三种美颜风格：0 ：光滑 1：自然 2：朦胧\n  */\n  setBeautyStyle(beautyStyle: number): Promise<void> {\n    return TrtcReactNativeSdk.setBeautyStyle({ beautyStyle });\n  }\n\n  /**\n  - 设置色彩滤镜效果\n  - 色彩滤镜，是一副包含色彩映射关系的颜色查找表图片，您可以在我们提供的官方 Demo 中找到预先准备好的几张滤镜图片。 SDK 会根据该查找表中的映射关系，对摄像头采集出的原始视频画面进行二次处理，以达到预期的滤镜效果。\n  - 暂时只支持网络图片\n  @param image\t包含色彩映射关系的颜色查找表图片，必须是 png 格式。\n  */\n  setFilter(image: string): Promise<void> {\n    return TrtcReactNativeSdk.setFilter({ imageUrl: image });\n  }\n\n  /**\n  - 设置色彩滤镜的强度\n  - 在美女秀场等应用场景里，滤镜浓度的要求会比较高，以便更加突显主播的差异。 我们默认的滤镜浓度是0.5，如果您觉得滤镜效果不明显，可以使用下面的接口进行调节。\n  @param strength\t从0到1，越大滤镜效果越明显，默认值为0.5。\n  */\n  setFilterStrength(strength: number): Promise<void> {\n    return TrtcReactNativeSdk.setFilterStrength({\n      strength: strength.toString(),\n    });\n  }\n\n  /**\n  - 设置美颜级别\n  @param beautyLevel\t美颜级别，取值范围0 - 9； 0表示关闭，9表示效果最明显。\n  */\n  setBeautyLevel(beautyLevel: number): Promise<void> {\n    return TrtcReactNativeSdk.setBeautyLevel({\n      beautyLevel,\n    });\n  }\n\n  /**\n  - 设置美白级别\n  @param whitenessLevel\t美白级别，取值范围0 - 9； 0表示关闭，1 - 9值越大，效果越明显。\n  */\n  setWhitenessLevel(whitenessLevel: number): Promise<void> {\n    return TrtcReactNativeSdk.setWhitenessLevel({\n      whitenessLevel,\n    });\n  }\n\n  /**\n  - 设置红润级别\n  @param ruddyLevel\t红润级别，取值范围0 - 9；0表示关闭，9表示效果最明显。\n  */\n  setRuddyLevel(ruddyLevel: number): Promise<void> {\n    return TrtcReactNativeSdk.setRuddyLevel({\n      ruddyLevel,\n    });\n  }\n\n  /**\n  - 开启清晰度增强\n  @param enable\ttrue：开启清晰度增强；false：关闭清晰度增强。默认值：true\n  */\n  enableSharpnessEnhancement(enable: boolean): Promise<void> {\n    return TrtcReactNativeSdk.enableSharpnessEnhancement({\n      enable,\n    });\n  }\n}\n"]}